# hide GObject type init allocs (they only happen once and are not leaks)
{
	type_init
	Memcheck:Leak
	fun:*alloc
	...
	fun:g_type_register_*
}

{
	type_init2
	Memcheck:Leak
	fun:*alloc
	...
	fun:g_type_init_*
}

{
	type_init3
	Memcheck:Leak
	fun:*alloc
	...
	fun:g_type_create_*
}

{
	type_init4
	Memcheck:Leak
	fun:*alloc
	...
	fun:g_type_class_ref
}

{
	type_init
	Memcheck:Leak
	fun:*alloc
	...
	fun:g_type_add_interface_static
}

# g_get_home_dir has a private buffer 
{
	gwd
	Memcheck:Leak
	fun:*alloc
	...
	fun:g_get_home_dir
}

# SELinux on Ubuntu generates a leak report
{
	selinux
	Memcheck:Leak
	fun:*alloc
	...
	obj:/lib/libselinux.so.1
}

# hide all D-Bus reports
{
	dbus
	Memcheck:Leak
	fun:*alloc
	...
	obj:/lib/libdbus-1.so.*
}

# hide all Orbit leaks
{
	orbit
	Memcheck:Leak
	fun:*alloc
	...
	fun:ORBit_*
}

# other library init
{
	g_module_init
	Memcheck:Leak
	fun:*alloc
	...
	fun:g_module_open
}
